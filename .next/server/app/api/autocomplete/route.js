/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/autocomplete/route";
exports.ids = ["app/api/autocomplete/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fautocomplete%2Froute&page=%2Fapi%2Fautocomplete%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fautocomplete%2Froute.ts&appDir=%2FUsers%2Fgriffin%2Fdev%2Ffiber-where-are-you%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fgriffin%2Fdev%2Ffiber-where-are-you&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fautocomplete%2Froute&page=%2Fapi%2Fautocomplete%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fautocomplete%2Froute.ts&appDir=%2FUsers%2Fgriffin%2Fdev%2Ffiber-where-are-you%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fgriffin%2Fdev%2Ffiber-where-are-you&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_griffin_dev_fiber_where_are_you_src_app_api_autocomplete_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/autocomplete/route.ts */ \"(rsc)/./src/app/api/autocomplete/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/autocomplete/route\",\n        pathname: \"/api/autocomplete\",\n        filename: \"route\",\n        bundlePath: \"app/api/autocomplete/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/griffin/dev/fiber-where-are-you/src/app/api/autocomplete/route.ts\",\n    nextConfigOutput,\n    userland: _Users_griffin_dev_fiber_where_are_you_src_app_api_autocomplete_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/autocomplete/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        if (!(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fautocomplete%2Froute&page=%2Fapi%2Fautocomplete%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fautocomplete%2Froute.ts&appDir=%2FUsers%2Fgriffin%2Fdev%2Ffiber-where-are-you%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fgriffin%2Fdev%2Ffiber-where-are-you&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/autocomplete/route.ts":
/*!*******************************************!*\
  !*** ./src/app/api/autocomplete/route.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_services_autocomplete__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/services/autocomplete */ \"(rsc)/./src/lib/services/autocomplete.ts\");\n/* harmony import */ var _lib_csrf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/csrf */ \"(rsc)/./src/lib/csrf.ts\");\n\n\n\nasync function GET(request) {\n    // Validate CSRF token for autocomplete requests\n    if (!await (0,_lib_csrf__WEBPACK_IMPORTED_MODULE_2__.validateCSRFToken)(request)) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Invalid or missing CSRF token'\n        }, {\n            status: 403\n        });\n    }\n    try {\n        const searchParams = request.nextUrl.searchParams;\n        const query = searchParams.get('q');\n        const limitParam = searchParams.get('limit');\n        if (!query) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Query parameter \"q\" is required'\n            }, {\n                status: 400\n            });\n        }\n        if (query.length < 3) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                suggestions: [],\n                meta: {\n                    query,\n                    count: 0,\n                    minLength: 3\n                }\n            });\n        }\n        const limit = limitParam ? parseInt(limitParam, 10) : 5;\n        const suggestions = await _lib_services_autocomplete__WEBPACK_IMPORTED_MODULE_1__.AutocompleteService.getSuggestions(query, limit);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            suggestions,\n            meta: {\n                query,\n                count: suggestions.length,\n                sources: [\n                    ...new Set(suggestions.map((s)=>s.source))\n                ],\n                searchedAt: new Date().toISOString()\n            }\n        });\n    } catch (error) {\n        console.error('Autocomplete API error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Internal server error occurred during autocomplete',\n            suggestions: []\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9hdXRvY29tcGxldGUvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RDtBQUNVO0FBQ25CO0FBRXhDLGVBQWVHLElBQUlDLE9BQW9CO0lBQzVDLGdEQUFnRDtJQUNoRCxJQUFJLENBQUUsTUFBTUYsNERBQWlCQSxDQUFDRSxVQUFXO1FBQ3ZDLE9BQU9KLHFEQUFZQSxDQUFDSyxJQUFJLENBQ3RCO1lBQUVDLE9BQU87UUFBZ0MsR0FDekM7WUFBRUMsUUFBUTtRQUFJO0lBRWxCO0lBQ0EsSUFBSTtRQUNGLE1BQU1DLGVBQWVKLFFBQVFLLE9BQU8sQ0FBQ0QsWUFBWTtRQUNqRCxNQUFNRSxRQUFRRixhQUFhRyxHQUFHLENBQUM7UUFDL0IsTUFBTUMsYUFBYUosYUFBYUcsR0FBRyxDQUFDO1FBRXBDLElBQUksQ0FBQ0QsT0FBTztZQUNWLE9BQU9WLHFEQUFZQSxDQUFDSyxJQUFJLENBQ3RCO2dCQUFFQyxPQUFPO1lBQWtDLEdBQzNDO2dCQUFFQyxRQUFRO1lBQUk7UUFFbEI7UUFFQSxJQUFJRyxNQUFNRyxNQUFNLEdBQUcsR0FBRztZQUNwQixPQUFPYixxREFBWUEsQ0FBQ0ssSUFBSSxDQUFDO2dCQUN2QlMsYUFBYSxFQUFFO2dCQUNmQyxNQUFNO29CQUNKTDtvQkFDQU0sT0FBTztvQkFDUEMsV0FBVztnQkFDYjtZQUNGO1FBQ0Y7UUFFQSxNQUFNQyxRQUFRTixhQUFhTyxTQUFTUCxZQUFZLE1BQU07UUFDdEQsTUFBTUUsY0FBYyxNQUFNYiwyRUFBbUJBLENBQUNtQixjQUFjLENBQUNWLE9BQU9RO1FBRXBFLE9BQU9sQixxREFBWUEsQ0FBQ0ssSUFBSSxDQUFDO1lBQ3ZCUztZQUNBQyxNQUFNO2dCQUNKTDtnQkFDQU0sT0FBT0YsWUFBWUQsTUFBTTtnQkFDekJRLFNBQVM7dUJBQUksSUFBSUMsSUFBSVIsWUFBWVMsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxNQUFNO2lCQUFHO2dCQUNyREMsWUFBWSxJQUFJQyxPQUFPQyxXQUFXO1lBQ3BDO1FBQ0Y7SUFFRixFQUFFLE9BQU90QixPQUFPO1FBQ2R1QixRQUFRdkIsS0FBSyxDQUFDLDJCQUEyQkE7UUFDekMsT0FBT04scURBQVlBLENBQUNLLElBQUksQ0FDdEI7WUFDRUMsT0FBTztZQUNQUSxhQUFhLEVBQUU7UUFDakIsR0FDQTtZQUFFUCxRQUFRO1FBQUk7SUFFbEI7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2dyaWZmaW4vZGV2L2ZpYmVyLXdoZXJlLWFyZS15b3Uvc3JjL2FwcC9hcGkvYXV0b2NvbXBsZXRlL3JvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBBdXRvY29tcGxldGVTZXJ2aWNlIH0gZnJvbSAnQC9saWIvc2VydmljZXMvYXV0b2NvbXBsZXRlJztcbmltcG9ydCB7IHZhbGlkYXRlQ1NSRlRva2VuIH0gZnJvbSAnQC9saWIvY3NyZic7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgLy8gVmFsaWRhdGUgQ1NSRiB0b2tlbiBmb3IgYXV0b2NvbXBsZXRlIHJlcXVlc3RzXG4gIGlmICghKGF3YWl0IHZhbGlkYXRlQ1NSRlRva2VuKHJlcXVlc3QpKSkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgZXJyb3I6ICdJbnZhbGlkIG9yIG1pc3NpbmcgQ1NSRiB0b2tlbicgfSxcbiAgICAgIHsgc3RhdHVzOiA0MDMgfVxuICAgICk7XG4gIH1cbiAgdHJ5IHtcbiAgICBjb25zdCBzZWFyY2hQYXJhbXMgPSByZXF1ZXN0Lm5leHRVcmwuc2VhcmNoUGFyYW1zO1xuICAgIGNvbnN0IHF1ZXJ5ID0gc2VhcmNoUGFyYW1zLmdldCgncScpO1xuICAgIGNvbnN0IGxpbWl0UGFyYW0gPSBzZWFyY2hQYXJhbXMuZ2V0KCdsaW1pdCcpO1xuICAgIFxuICAgIGlmICghcXVlcnkpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ1F1ZXJ5IHBhcmFtZXRlciBcInFcIiBpcyByZXF1aXJlZCcgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChxdWVyeS5sZW5ndGggPCAzKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWdnZXN0aW9uczogW10sXG4gICAgICAgIG1ldGE6IHtcbiAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICBjb3VudDogMCxcbiAgICAgICAgICBtaW5MZW5ndGg6IDMsXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBsaW1pdCA9IGxpbWl0UGFyYW0gPyBwYXJzZUludChsaW1pdFBhcmFtLCAxMCkgOiA1O1xuICAgIGNvbnN0IHN1Z2dlc3Rpb25zID0gYXdhaXQgQXV0b2NvbXBsZXRlU2VydmljZS5nZXRTdWdnZXN0aW9ucyhxdWVyeSwgbGltaXQpO1xuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIHN1Z2dlc3Rpb25zLFxuICAgICAgbWV0YToge1xuICAgICAgICBxdWVyeSxcbiAgICAgICAgY291bnQ6IHN1Z2dlc3Rpb25zLmxlbmd0aCxcbiAgICAgICAgc291cmNlczogWy4uLm5ldyBTZXQoc3VnZ2VzdGlvbnMubWFwKHMgPT4gcy5zb3VyY2UpKV0sXG4gICAgICAgIHNlYXJjaGVkQXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdBdXRvY29tcGxldGUgQVBJIGVycm9yOicsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IFxuICAgICAgICBlcnJvcjogJ0ludGVybmFsIHNlcnZlciBlcnJvciBvY2N1cnJlZCBkdXJpbmcgYXV0b2NvbXBsZXRlJyxcbiAgICAgICAgc3VnZ2VzdGlvbnM6IFtdLFxuICAgICAgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiQXV0b2NvbXBsZXRlU2VydmljZSIsInZhbGlkYXRlQ1NSRlRva2VuIiwiR0VUIiwicmVxdWVzdCIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInNlYXJjaFBhcmFtcyIsIm5leHRVcmwiLCJxdWVyeSIsImdldCIsImxpbWl0UGFyYW0iLCJsZW5ndGgiLCJzdWdnZXN0aW9ucyIsIm1ldGEiLCJjb3VudCIsIm1pbkxlbmd0aCIsImxpbWl0IiwicGFyc2VJbnQiLCJnZXRTdWdnZXN0aW9ucyIsInNvdXJjZXMiLCJTZXQiLCJtYXAiLCJzIiwic291cmNlIiwic2VhcmNoZWRBdCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/autocomplete/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/config.ts":
/*!***************************!*\
  !*** ./src/lib/config.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction getEnvVar(name, defaultValue) {\n    const value = process.env[name];\n    if (!value && !defaultValue) {\n        throw new Error(`Environment variable ${name} is required`);\n    }\n    return value || defaultValue;\n}\nfunction getOptionalEnvVar(name) {\n    return process.env[name];\n}\nconst config = {\n    database: {\n        url: getEnvVar('DATABASE_URL')\n    },\n    api: {\n        geocodingKey: getOptionalEnvVar('GEOCODING_API_KEY')\n    },\n    app: {\n        url: getEnvVar('NEXTAUTH_URL', 'http://localhost:3000'),\n        secret: getEnvVar('NEXTAUTH_SECRET')\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2NvbmZpZy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQWFBLFNBQVNBLFVBQVVDLElBQVksRUFBRUMsWUFBcUI7SUFDcEQsTUFBTUMsUUFBUUMsUUFBUUMsR0FBRyxDQUFDSixLQUFLO0lBQy9CLElBQUksQ0FBQ0UsU0FBUyxDQUFDRCxjQUFjO1FBQzNCLE1BQU0sSUFBSUksTUFBTSxDQUFDLHFCQUFxQixFQUFFTCxLQUFLLFlBQVksQ0FBQztJQUM1RDtJQUNBLE9BQU9FLFNBQVNEO0FBQ2xCO0FBRUEsU0FBU0ssa0JBQWtCTixJQUFZO0lBQ3JDLE9BQU9HLFFBQVFDLEdBQUcsQ0FBQ0osS0FBSztBQUMxQjtBQUVPLE1BQU1PLFNBQWlCO0lBQzVCQyxVQUFVO1FBQ1JDLEtBQUtWLFVBQVU7SUFDakI7SUFDQVcsS0FBSztRQUNIQyxjQUFjTCxrQkFBa0I7SUFDbEM7SUFDQU0sS0FBSztRQUNISCxLQUFLVixVQUFVLGdCQUFnQjtRQUMvQmMsUUFBUWQsVUFBVTtJQUNwQjtBQUNGLEVBQUU7QUFFRixpRUFBZVEsTUFBTUEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2dyaWZmaW4vZGV2L2ZpYmVyLXdoZXJlLWFyZS15b3Uvc3JjL2xpYi9jb25maWcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIENvbmZpZyB7XG4gIGRhdGFiYXNlOiB7XG4gICAgdXJsOiBzdHJpbmc7XG4gIH07XG4gIGFwaToge1xuICAgIGdlb2NvZGluZ0tleT86IHN0cmluZztcbiAgfTtcbiAgYXBwOiB7XG4gICAgdXJsOiBzdHJpbmc7XG4gICAgc2VjcmV0OiBzdHJpbmc7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGdldEVudlZhcihuYW1lOiBzdHJpbmcsIGRlZmF1bHRWYWx1ZT86IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IHZhbHVlID0gcHJvY2Vzcy5lbnZbbmFtZV07XG4gIGlmICghdmFsdWUgJiYgIWRlZmF1bHRWYWx1ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgRW52aXJvbm1lbnQgdmFyaWFibGUgJHtuYW1lfSBpcyByZXF1aXJlZGApO1xuICB9XG4gIHJldHVybiB2YWx1ZSB8fCBkZWZhdWx0VmFsdWUhO1xufVxuXG5mdW5jdGlvbiBnZXRPcHRpb25hbEVudlZhcihuYW1lOiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xuICByZXR1cm4gcHJvY2Vzcy5lbnZbbmFtZV07XG59XG5cbmV4cG9ydCBjb25zdCBjb25maWc6IENvbmZpZyA9IHtcbiAgZGF0YWJhc2U6IHtcbiAgICB1cmw6IGdldEVudlZhcignREFUQUJBU0VfVVJMJyksXG4gIH0sXG4gIGFwaToge1xuICAgIGdlb2NvZGluZ0tleTogZ2V0T3B0aW9uYWxFbnZWYXIoJ0dFT0NPRElOR19BUElfS0VZJyksXG4gIH0sXG4gIGFwcDoge1xuICAgIHVybDogZ2V0RW52VmFyKCdORVhUQVVUSF9VUkwnLCAnaHR0cDovL2xvY2FsaG9zdDozMDAwJyksXG4gICAgc2VjcmV0OiBnZXRFbnZWYXIoJ05FWFRBVVRIX1NFQ1JFVCcpLFxuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29uZmlnOyJdLCJuYW1lcyI6WyJnZXRFbnZWYXIiLCJuYW1lIiwiZGVmYXVsdFZhbHVlIiwidmFsdWUiLCJwcm9jZXNzIiwiZW52IiwiRXJyb3IiLCJnZXRPcHRpb25hbEVudlZhciIsImNvbmZpZyIsImRhdGFiYXNlIiwidXJsIiwiYXBpIiwiZ2VvY29kaW5nS2V5IiwiYXBwIiwic2VjcmV0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/config.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/csrf.ts":
/*!*************************!*\
  !*** ./src/lib/csrf.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createCSRFHash: () => (/* binding */ createCSRFHash),\n/* harmony export */   generateCSRFSecret: () => (/* binding */ generateCSRFSecret),\n/* harmony export */   generateCSRFToken: () => (/* binding */ generateCSRFToken),\n/* harmony export */   generateCSRFTokenWithHash: () => (/* binding */ generateCSRFTokenWithHash),\n/* harmony export */   setCSRFCookie: () => (/* binding */ setCSRFCookie),\n/* harmony export */   validateCSRFToken: () => (/* binding */ validateCSRFToken)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/./node_modules/next/dist/api/headers.js\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst CSRF_SECRET = process.env.CSRF_SECRET || 'your-csrf-secret-key-change-in-production';\nconst CSRF_COOKIE_NAME = 'csrf-secret';\nfunction generateCSRFToken() {\n    return crypto__WEBPACK_IMPORTED_MODULE_1___default().randomBytes(32).toString('hex');\n}\nfunction generateCSRFSecret() {\n    return crypto__WEBPACK_IMPORTED_MODULE_1___default().randomBytes(32).toString('hex');\n}\nfunction createCSRFHash(token, secret) {\n    return crypto__WEBPACK_IMPORTED_MODULE_1___default().createHmac('sha256', CSRF_SECRET).update(`${token}:${secret}`).digest('hex');\n}\nasync function validateCSRFToken(request) {\n    try {\n        // Get CSRF token from header or body\n        const csrfToken = request.headers.get('x-csrf-token') || request.headers.get('csrf-token');\n        if (!csrfToken) {\n            return false;\n        }\n        // Get CSRF secret from cookie\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        const csrfSecret = cookieStore.get(CSRF_COOKIE_NAME)?.value;\n        if (!csrfSecret) {\n            return false;\n        }\n        // Get provided hash from the token (format: token:hash)\n        const [token, providedHash] = csrfToken.split(':');\n        if (!token || !providedHash) {\n            return false;\n        }\n        // Create expected hash using the token and secret\n        const expectedHash = createCSRFHash(token, csrfSecret);\n        // Constant-time comparison to prevent timing attacks\n        return crypto__WEBPACK_IMPORTED_MODULE_1___default().timingSafeEqual(Buffer.from(expectedHash, 'hex'), Buffer.from(providedHash, 'hex'));\n    } catch (error) {\n        console.error('CSRF validation error:', error);\n        return false;\n    }\n}\nfunction generateCSRFTokenWithHash(secret) {\n    const token = generateCSRFToken();\n    const hash = createCSRFHash(token, secret);\n    return `${token}:${hash}`;\n}\nasync function setCSRFCookie(secret) {\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n    cookieStore.set(CSRF_COOKIE_NAME, secret, {\n        httpOnly: true,\n        secure: \"development\" === 'production',\n        sameSite: 'strict',\n        maxAge: 60 * 60 * 24\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2NzcmYudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXVDO0FBRVg7QUFFNUIsTUFBTUUsY0FBY0MsUUFBUUMsR0FBRyxDQUFDRixXQUFXLElBQUk7QUFDL0MsTUFBTUcsbUJBQW1CO0FBRWxCLFNBQVNDO0lBQ2QsT0FBT0wseURBQWtCLENBQUMsSUFBSU8sUUFBUSxDQUFDO0FBQ3pDO0FBRU8sU0FBU0M7SUFDZCxPQUFPUix5REFBa0IsQ0FBQyxJQUFJTyxRQUFRLENBQUM7QUFDekM7QUFFTyxTQUFTRSxlQUFlQyxLQUFhLEVBQUVDLE1BQWM7SUFDMUQsT0FBT1gsd0RBQ00sQ0FBQyxVQUFVQyxhQUNyQlksTUFBTSxDQUFDLEdBQUdILE1BQU0sQ0FBQyxFQUFFQyxRQUFRLEVBQzNCRyxNQUFNLENBQUM7QUFDWjtBQUVPLGVBQWVDLGtCQUFrQkMsT0FBb0I7SUFDMUQsSUFBSTtRQUNGLHFDQUFxQztRQUNyQyxNQUFNQyxZQUFZRCxRQUFRRSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxtQkFDckJILFFBQVFFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO1FBRXJDLElBQUksQ0FBQ0YsV0FBVztZQUNkLE9BQU87UUFDVDtRQUVBLDhCQUE4QjtRQUM5QixNQUFNRyxjQUFjLE1BQU1yQixxREFBT0E7UUFDakMsTUFBTXNCLGFBQWFELFlBQVlELEdBQUcsQ0FBQ2YsbUJBQW1Ca0I7UUFFdEQsSUFBSSxDQUFDRCxZQUFZO1lBQ2YsT0FBTztRQUNUO1FBRUEsd0RBQXdEO1FBQ3hELE1BQU0sQ0FBQ1gsT0FBT2EsYUFBYSxHQUFHTixVQUFVTyxLQUFLLENBQUM7UUFFOUMsSUFBSSxDQUFDZCxTQUFTLENBQUNhLGNBQWM7WUFDM0IsT0FBTztRQUNUO1FBRUEsa0RBQWtEO1FBQ2xELE1BQU1FLGVBQWVoQixlQUFlQyxPQUFPVztRQUUzQyxxREFBcUQ7UUFDckQsT0FBT3JCLDZEQUFzQixDQUMzQjJCLE9BQU9DLElBQUksQ0FBQ0gsY0FBYyxRQUMxQkUsT0FBT0MsSUFBSSxDQUFDTCxjQUFjO0lBRTlCLEVBQUUsT0FBT00sT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMEJBQTBCQTtRQUN4QyxPQUFPO0lBQ1Q7QUFDRjtBQUVPLFNBQVNFLDBCQUEwQnBCLE1BQWM7SUFDdEQsTUFBTUQsUUFBUUw7SUFDZCxNQUFNMkIsT0FBT3ZCLGVBQWVDLE9BQU9DO0lBQ25DLE9BQU8sR0FBR0QsTUFBTSxDQUFDLEVBQUVzQixNQUFNO0FBQzNCO0FBRU8sZUFBZUMsY0FBY3RCLE1BQWM7SUFDaEQsTUFBTVMsY0FBYyxNQUFNckIscURBQU9BO0lBQ2pDcUIsWUFBWWMsR0FBRyxDQUFDOUIsa0JBQWtCTyxRQUFRO1FBQ3hDd0IsVUFBVTtRQUNWQyxRQUFRbEMsa0JBQXlCO1FBQ2pDbUMsVUFBVTtRQUNWQyxRQUFRLEtBQUssS0FBSztJQUNwQjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvZ3JpZmZpbi9kZXYvZmliZXItd2hlcmUtYXJlLXlvdS9zcmMvbGliL2NzcmYudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XG5pbXBvcnQgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcblxuY29uc3QgQ1NSRl9TRUNSRVQgPSBwcm9jZXNzLmVudi5DU1JGX1NFQ1JFVCB8fCAneW91ci1jc3JmLXNlY3JldC1rZXktY2hhbmdlLWluLXByb2R1Y3Rpb24nO1xuY29uc3QgQ1NSRl9DT09LSUVfTkFNRSA9ICdjc3JmLXNlY3JldCc7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUNTUkZUb2tlbigpOiBzdHJpbmcge1xuICByZXR1cm4gY3J5cHRvLnJhbmRvbUJ5dGVzKDMyKS50b1N0cmluZygnaGV4Jyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUNTUkZTZWNyZXQoKTogc3RyaW5nIHtcbiAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcygzMikudG9TdHJpbmcoJ2hleCcpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ1NSRkhhc2godG9rZW46IHN0cmluZywgc2VjcmV0OiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gY3J5cHRvXG4gICAgLmNyZWF0ZUhtYWMoJ3NoYTI1NicsIENTUkZfU0VDUkVUKVxuICAgIC51cGRhdGUoYCR7dG9rZW59OiR7c2VjcmV0fWApXG4gICAgLmRpZ2VzdCgnaGV4Jyk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2YWxpZGF0ZUNTUkZUb2tlbihyZXF1ZXN0OiBOZXh0UmVxdWVzdCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICB0cnkge1xuICAgIC8vIEdldCBDU1JGIHRva2VuIGZyb20gaGVhZGVyIG9yIGJvZHlcbiAgICBjb25zdCBjc3JmVG9rZW4gPSByZXF1ZXN0LmhlYWRlcnMuZ2V0KCd4LWNzcmYtdG9rZW4nKSB8fCBcbiAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3QuaGVhZGVycy5nZXQoJ2NzcmYtdG9rZW4nKTtcbiAgICBcbiAgICBpZiAoIWNzcmZUb2tlbikge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8vIEdldCBDU1JGIHNlY3JldCBmcm9tIGNvb2tpZVxuICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpO1xuICAgIGNvbnN0IGNzcmZTZWNyZXQgPSBjb29raWVTdG9yZS5nZXQoQ1NSRl9DT09LSUVfTkFNRSk/LnZhbHVlO1xuICAgIFxuICAgIGlmICghY3NyZlNlY3JldCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8vIEdldCBwcm92aWRlZCBoYXNoIGZyb20gdGhlIHRva2VuIChmb3JtYXQ6IHRva2VuOmhhc2gpXG4gICAgY29uc3QgW3Rva2VuLCBwcm92aWRlZEhhc2hdID0gY3NyZlRva2VuLnNwbGl0KCc6Jyk7XG4gICAgXG4gICAgaWYgKCF0b2tlbiB8fCAhcHJvdmlkZWRIYXNoKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gQ3JlYXRlIGV4cGVjdGVkIGhhc2ggdXNpbmcgdGhlIHRva2VuIGFuZCBzZWNyZXRcbiAgICBjb25zdCBleHBlY3RlZEhhc2ggPSBjcmVhdGVDU1JGSGFzaCh0b2tlbiwgY3NyZlNlY3JldCk7XG5cbiAgICAvLyBDb25zdGFudC10aW1lIGNvbXBhcmlzb24gdG8gcHJldmVudCB0aW1pbmcgYXR0YWNrc1xuICAgIHJldHVybiBjcnlwdG8udGltaW5nU2FmZUVxdWFsKFxuICAgICAgQnVmZmVyLmZyb20oZXhwZWN0ZWRIYXNoLCAnaGV4JyksXG4gICAgICBCdWZmZXIuZnJvbShwcm92aWRlZEhhc2gsICdoZXgnKVxuICAgICk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignQ1NSRiB2YWxpZGF0aW9uIGVycm9yOicsIGVycm9yKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlQ1NSRlRva2VuV2l0aEhhc2goc2VjcmV0OiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCB0b2tlbiA9IGdlbmVyYXRlQ1NSRlRva2VuKCk7XG4gIGNvbnN0IGhhc2ggPSBjcmVhdGVDU1JGSGFzaCh0b2tlbiwgc2VjcmV0KTtcbiAgcmV0dXJuIGAke3Rva2VufToke2hhc2h9YDtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNldENTUkZDb29raWUoc2VjcmV0OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgY29uc3QgY29va2llU3RvcmUgPSBhd2FpdCBjb29raWVzKCk7XG4gIGNvb2tpZVN0b3JlLnNldChDU1JGX0NPT0tJRV9OQU1FLCBzZWNyZXQsIHtcbiAgICBodHRwT25seTogdHJ1ZSxcbiAgICBzZWN1cmU6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicsXG4gICAgc2FtZVNpdGU6ICdzdHJpY3QnLFxuICAgIG1heEFnZTogNjAgKiA2MCAqIDI0LCAvLyAyNCBob3Vyc1xuICB9KTtcbn0iXSwibmFtZXMiOlsiY29va2llcyIsImNyeXB0byIsIkNTUkZfU0VDUkVUIiwicHJvY2VzcyIsImVudiIsIkNTUkZfQ09PS0lFX05BTUUiLCJnZW5lcmF0ZUNTUkZUb2tlbiIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJnZW5lcmF0ZUNTUkZTZWNyZXQiLCJjcmVhdGVDU1JGSGFzaCIsInRva2VuIiwic2VjcmV0IiwiY3JlYXRlSG1hYyIsInVwZGF0ZSIsImRpZ2VzdCIsInZhbGlkYXRlQ1NSRlRva2VuIiwicmVxdWVzdCIsImNzcmZUb2tlbiIsImhlYWRlcnMiLCJnZXQiLCJjb29raWVTdG9yZSIsImNzcmZTZWNyZXQiLCJ2YWx1ZSIsInByb3ZpZGVkSGFzaCIsInNwbGl0IiwiZXhwZWN0ZWRIYXNoIiwidGltaW5nU2FmZUVxdWFsIiwiQnVmZmVyIiwiZnJvbSIsImVycm9yIiwiY29uc29sZSIsImdlbmVyYXRlQ1NSRlRva2VuV2l0aEhhc2giLCJoYXNoIiwic2V0Q1NSRkNvb2tpZSIsInNldCIsImh0dHBPbmx5Iiwic2VjdXJlIiwic2FtZVNpdGUiLCJtYXhBZ2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/csrf.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/services/autocomplete.ts":
/*!******************************************!*\
  !*** ./src/lib/services/autocomplete.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutocompleteService: () => (/* binding */ AutocompleteService),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/config */ \"(rsc)/./src/lib/config.ts\");\n\nclass AutocompleteService {\n    static{\n        this.GOOGLE_PLACES_URL = 'https://maps.googleapis.com/maps/api/place/autocomplete/json';\n    }\n    static{\n        this.MAPBOX_SUGGEST_URL = 'https://api.mapbox.com/geocoding/v5/mapbox.places';\n    }\n    static async getSuggestions(query, limit = 5) {\n        if (!query || query.length < 3) {\n            return [];\n        }\n        const suggestions = [];\n        // Try multiple services in parallel\n        const promises = [\n            this.getGoogleSuggestions(query, limit),\n            this.getMapboxSuggestions(query, limit),\n            this.getLocalSuggestions(query, limit)\n        ];\n        const results = await Promise.allSettled(promises);\n        results.forEach((result)=>{\n            if (result.status === 'fulfilled') {\n                suggestions.push(...result.value);\n            }\n        });\n        // Remove duplicates and limit results\n        const uniqueSuggestions = this.removeDuplicates(suggestions);\n        return uniqueSuggestions.slice(0, limit);\n    }\n    static async getGoogleSuggestions(query, limit) {\n        const apiKey = _lib_config__WEBPACK_IMPORTED_MODULE_0__.config.api.geocodingKey;\n        if (!apiKey) {\n            return [];\n        }\n        try {\n            const url = `${this.GOOGLE_PLACES_URL}?input=${encodeURIComponent(query)}&types=address&components=country:us&key=${apiKey}`;\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Google Places API request failed');\n            }\n            const data = await response.json();\n            if (!data.predictions) {\n                return [];\n            }\n            return data.predictions.slice(0, limit).map((prediction)=>({\n                    formattedAddress: prediction.description,\n                    placeId: prediction.place_id,\n                    components: this.parseAddress(prediction.description),\n                    source: 'google'\n                }));\n        } catch (error) {\n            console.warn('Google autocomplete failed:', error);\n            return [];\n        }\n    }\n    static async getMapboxSuggestions(query, limit) {\n        const apiKey = process.env.MAPBOX_ACCESS_TOKEN;\n        if (!apiKey) {\n            return [];\n        }\n        try {\n            const url = `${this.MAPBOX_SUGGEST_URL}/${encodeURIComponent(query)}.json?access_token=${apiKey}&country=us&types=address&limit=${limit}`;\n            const response = await fetch(url);\n            if (!response.ok) {\n                throw new Error('Mapbox API request failed');\n            }\n            const data = await response.json();\n            if (!data.features) {\n                return [];\n            }\n            return data.features.map((feature)=>({\n                    formattedAddress: feature.place_name,\n                    components: this.parseAddress(feature.place_name),\n                    source: 'mapbox'\n                }));\n        } catch (error) {\n            console.warn('Mapbox autocomplete failed:', error);\n            return [];\n        }\n    }\n    static parseAddress(address) {\n        const parts = address.split(',').map((part)=>part.trim());\n        let street = '';\n        let city = '';\n        let state = '';\n        let zipCode = '';\n        if (parts.length >= 1) {\n            street = parts[0];\n        }\n        if (parts.length >= 2) {\n            city = parts[1];\n        }\n        if (parts.length >= 3) {\n            const stateZipPart = parts[2];\n            const stateZipMatch = stateZipPart.match(/^(.+?)\\s+(\\d{5}(?:-\\d{4})?)$/);\n            if (stateZipMatch) {\n                state = stateZipMatch[1];\n                zipCode = stateZipMatch[2];\n            } else {\n                state = stateZipPart;\n            }\n        }\n        return {\n            street,\n            city,\n            state,\n            zipCode\n        };\n    }\n    static removeDuplicates(suggestions) {\n        const seen = new Set();\n        return suggestions.filter((suggestion)=>{\n            const key = suggestion.formattedAddress.toLowerCase().replace(/\\s+/g, ' ').trim();\n            if (seen.has(key)) {\n                return false;\n            }\n            seen.add(key);\n            return true;\n        });\n    }\n    // Fallback: Generate suggestions from existing database\n    static async getLocalSuggestions(query, limit = 5) {\n        try {\n            // For demo purposes, return some sample suggestions\n            const demoSuggestions = [\n                {\n                    formattedAddress: '123 Main St, Seattle, WA 98101',\n                    components: {\n                        street: '123 Main St',\n                        city: 'Seattle',\n                        state: 'WA',\n                        zipCode: '98101'\n                    },\n                    source: 'google'\n                },\n                {\n                    formattedAddress: '456 Broadway Ave, Portland, OR 97201',\n                    components: {\n                        street: '456 Broadway Ave',\n                        city: 'Portland',\n                        state: 'OR',\n                        zipCode: '97201'\n                    },\n                    source: 'google'\n                },\n                {\n                    formattedAddress: '789 Pine St, San Francisco, CA 94102',\n                    components: {\n                        street: '789 Pine St',\n                        city: 'San Francisco',\n                        state: 'CA',\n                        zipCode: '94102'\n                    },\n                    source: 'google'\n                }\n            ];\n            return demoSuggestions.filter((suggestion)=>suggestion.formattedAddress.toLowerCase().includes(query.toLowerCase())).slice(0, limit);\n        } catch (error) {\n            console.warn('Local suggestions failed:', error);\n            return [];\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AutocompleteService);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/services/autocomplete.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fautocomplete%2Froute&page=%2Fapi%2Fautocomplete%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fautocomplete%2Froute.ts&appDir=%2FUsers%2Fgriffin%2Fdev%2Ffiber-where-are-you%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fgriffin%2Fdev%2Ffiber-where-are-you&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();